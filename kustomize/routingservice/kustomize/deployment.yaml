apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: fleet
  name: routingservice-deployment
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: routingservice
  template:
    metadata:
      labels:
        app: routingservice
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        - name: routingservice
          image: ghcr.io/andidroid/testgo/routingservice:latest
          imagePullPolicy: Always #IfNotPresent
          securityContext:
            privileged: false

          ports:
            - name: http
              containerPort: 80
              # hostPort: 8080
              protocol: TCP
            # - name: https
            #   containerPort: 443
            #   # hostPort: 8443
            #   protocol: TCP

          livenessProbe:
            httpGet:
              path: /health/live
              port: mgmt-http
            failureThreshold: 3
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /health/ready
              port: mgmt-http
            failureThreshold: 3
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /health/started
              port: mgmt-http
            failureThreshold: 30
            periodSeconds: 10

          resources:
            requests:
              memory: "32Mi"
              cpu: "10m"
            limits:
              memory: "512Mi"
              cpu: "500m"

          env:
            - name: OTEL_EXPORTER_JAEGER_ENDPOINT
              value: "http://jaeger-collector-service.monitoring.svc.cluster.local:14268/api/traces"
            - name: REDIS_HOST
              value: "redis-service.redis.svc.cluster.local"
            - name: MONGODB_HOST
              value: "mongodb-service.mongodb.svc.cluster.local"
            - name: POSTGRES_HOST
              value: "pgrouting-service.pgrouting.svc.cluster.local"
            - name: ROUTING_SERVCICE_HOST
              value: "routing-service.fleet.svc.cluster.local"
            - name: SEARCH_SERVCICE_HOST
              value: "search-service.fleet.svc.cluster.local"
            - name: FLEET_SERVCICE_HOST
              value: "fleet-service.fleet.svc.cluster.local"
            - name: MESSAGING_SERVCICE_HOST
              value: "messaging-service.fleet.svc.cluster.local"

            # - name: POSTGRESQL_HOST
            #   valueFrom:
            #     configMapKeyRef:
            #       name: testwar-configmap
            #       key: postgresql_host
