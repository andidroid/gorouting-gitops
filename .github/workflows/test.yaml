name: Lint and Test Charts

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - "master"
      - "feature/**"
      - "release/**"
jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3.3
        with:
          version: v3.10.0

      - uses: actions/setup-python@v4.3.0
        with:
          python-version: "3.10.4"

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        # ct list-changed --targer-branch $GITHUB_REF
        run: |
          changed=$(ct list-changed)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint

      - name: Create kind cluster
        uses: helm/kind-action@v1.4.0
        if: steps.list-changed.outputs.changed == 'true'
        with:
          version: v0.14.0
          kubectl_version: v1.23.0

      - name: Run chart-testing (install)
        run: ct install

  datree:
    strategy:
      fail-fast: false
      matrix:
        service:
          - routingservice
          - fleetservice
          - searchservice
          - messagingservice
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3.3
        with:
          version: v3.10.0

      - name: build helm chart
        run: |
          cd charts/${{ matrix.service }}
          helm dependency update .
          helm template ${{ matrix.service }} .

      - name: Run Datree Policy Check
        uses: datreeio/action-datree@main
        with:
          path: "charts/${{ matrix.service }}"
          isHelmChart: true
          cliArguments: "--schema-version 1.23.0"
          helmArguments: "--values charts/${{ matrix.service }}/values.yaml"
        env:
          DATREE_TOKEN: ${{ secrets.DATREE_TOKEN }}
          
      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: "charts/${{ matrix.service }}"
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
